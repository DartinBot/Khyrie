<style>
.ff-load{display:inline-block;width:20px;height:20px;border:3px solid #f3f3f3;border-top:3px solid #4CAF50;border-radius:50%;animation:ff-spin 1s linear infinite}
@keyframes ff-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.ff-error{color:#F44336;background:#ffebee;padding:8px 12px;border-radius:4px;border-left:4px solid #F44336;margin:10px 0;font-size:14px}
.ff-success{color:#4CAF50;background:#e8f5e8;padding:8px 12px;border-radius:4px;border-left:4px solid #4CAF50;margin:10px 0;font-size:14px}
.ff-online{color:#4CAF50!important;font-weight:bold}
.ff-offline{color:#F44336!important;font-weight:bold}
.ff-card{border:1px solid #e0e0e0;border-radius:8px;padding:16px;margin:8px 0;cursor:pointer;transition:all .3s ease;background:white;box-shadow:0 2px 4px rgba(0,0,0,.1)}
.ff-card:hover{box-shadow:0 4px 12px rgba(0,0,0,.15);transform:translateY(-2px)}
.ff-badge{display:inline-block;background:#2196F3;color:white;padding:4px 8px;border-radius:12px;font-size:12px;font-weight:bold;margin:2px}
.ff-diff-easy{background:#4CAF50!important}
.ff-diff-moderate{background:#FF9800!important}
.ff-diff-hard{background:#F44336!important}
</style>
<script>
(function(){'use strict';
var c={API_URL:'https://fitfriendsclub-api.darnellroy2.workers.dev',DEBUG:1,AUTO_LOAD:1,RETRY:3,TIMEOUT:15000,FEATURES:{CLUBS:1,TRAILS:1,DASHBOARD:1,LIGHTBOXES:1}};
window.FFConfig=c;var a;
function sl(s){try{if($w('#loadingIcon'))$w('#loadingIcon').show();if(s&&$w(s))$w(s).addClass('loading')}catch(e){}}
function hl(s){try{if($w('#loadingIcon'))$w('#loadingIcon').hide();if(s&&$w(s))$w(s).removeClass('loading')}catch(e){}}
function se(m){console.error('ERROR:',m);try{if($w('#errorMessage')){$w('#errorMessage').text=m;$w('#errorMessage').addClass('ff-error');$w('#errorMessage').show();setTimeout(()=>{if($w('#errorMessage'))$w('#errorMessage').hide()},7000)}}catch(e){}}
function ss(m){console.log('SUCCESS:',m);try{if($w('#successMessage')){$w('#successMessage').text=m;$w('#successMessage').addClass('ff-success');$w('#successMessage').show();setTimeout(()=>{if($w('#successMessage'))$w('#successMessage').hide()},4000)}}catch(e){}}
function us(t,m){['#statusIndicator','#globalStatus','#apiStatus','#connectionStatus','#systemStatus'].forEach(s=>{try{if($w(s)){$w(s).text=m;if(t==='online'||t==='success'){$w(s).addClass('ff-online');$w(s).removeClass('ff-offline')}else{$w(s).addClass('ff-offline');$w(s).removeClass('ff-online')}}}catch(e){}})}
function uc(n){['#clubCountDisplay','#clubsCount','#totalClubs','#clubCountText','#clubCounter'].forEach(s=>{try{if($w(s))$w(s).text=n+' Clubs Available'}catch(e){}})}
function ut(n){['#trailCountDisplay','#trailsCount','#totalTrails','#trailCountText','#trailCounter'].forEach(s=>{try{if($w(s))$w(s).text=n+' Trails Available'}catch(e){}})}
function scd(d){try{if(!c.FEATURES.LIGHTBOXES)return;if($w('#clubDetailsLightbox')){var dt={'#clubDetailsTitle':d.clubName||'Unknown Club','#clubDetailsCategory':'Category: '+(d.clubCategory||'General'),'#clubDetailsEquipment':'Equipment: '+(d.equipmentType||'Mixed'),'#clubDetailsDescription':d.description||'Premium fitness club'};Object.entries(dt).forEach(([s,t])=>{try{if($w(s))$w(s).text=t}catch(e){}});$w('#clubDetailsLightbox').show();if($w('#closeClubDetails'))$w('#closeClubDetails').onClick(()=>$w('#clubDetailsLightbox').hide());if($w('#clubDetailsClose'))$w('#clubDetailsClose').onClick(()=>$w('#clubDetailsLightbox').hide())}}catch(e){}}
function std(d){try{if(!c.FEATURES.LIGHTBOXES)return;if($w('#trailDetailsLightbox')){var dt={'#trailDetailsTitle':d.trailName||'Unknown Trail','#trailDetailsLocation':'Location: '+(d.location||'Unknown'),'#trailDetailsDifficulty':'Difficulty: '+(d.difficulty||'Moderate'),'#trailDetailsDistance':'Distance: '+(d.distance||'TBD'),'#trailDetailsDescription':d.description||'Virtual trail experience'};Object.entries(dt).forEach(([s,t])=>{try{if($w(s))$w(s).text=t}catch(e){}});$w('#trailDetailsLightbox').show();if($w('#closeTrailDetails'))$w('#closeTrailDetails').onClick(()=>$w('#trailDetailsLightbox').hide());if($w('#trailDetailsClose'))$w('#trailDetailsClose').onClick(()=>$w('#trailDetailsLightbox').hide())}}catch(e){}}
class API{
constructor(){this.baseUrl=c.API_URL;this.timeout=c.TIMEOUT||15000;this.retryAttempts=c.RETRY||3}
async call(e,o={},att=1){var ctrl=new AbortController();var tid=setTimeout(()=>ctrl.abort(),this.timeout);try{if(c.DEBUG)console.log('API Call ('+att+'): '+this.baseUrl+e);var r=await fetch(`${this.baseUrl}${e}`,{headers:{'Content-Type':'application/json','Accept':'application/json',...o.headers},signal:ctrl.signal,...o});clearTimeout(tid);if(!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);var res=await r.json();if(c.DEBUG)console.log('API Success: '+e,res);return res}catch(err){clearTimeout(tid);console.error('API Error ('+att+'):',err);if(att<this.retryAttempts&&!err.name==='AbortError'){console.log('Retrying... ('+(att+1)+'/'+this.retryAttempts+')');await new Promise(resolve=>setTimeout(resolve,1000*att));return this.call(e,o,att+1)}throw err}}
async health(){return await this.call('/')}
async getClubs(){return await this.call('/test/clubs')}
async getTrails(){return await this.call('/test/trails')}
async runTests(){return await this.call('/test/all')}
}
async function init(){try{console.log('Initializing...');if(!a)a=new API();sl();us('connecting','Connecting...');var h=await a.health();console.log('Health Check:',h);if(h.status==='success'){us('online','API Connected');ss('Connected!')}else{throw new Error('Health check failed')}hl();return 1}catch(e){console.error('Init failed:',e);us('offline','Connection Failed');se('Failed to connect: '+e.message);hl();return 0}}
function nav(){try{var nb={'#homeButton':'/','#clubsButton':'/clubs','#trailsButton':'/trails','#dashboardButton':'/dashboard','#aboutButton':'/about','#contactButton':'/contact'};Object.entries(nb).forEach(([s,p])=>{try{if($w(s))$w(s).onClick(()=>{console.log('Nav: '+p);wixLocation.to(p)})}catch(e){}});var tb=['#testApiButton','#runTestButton','#apiTestButton'];tb.forEach(s=>{try{if($w(s))$w(s).onClick(test)}catch(e){}});console.log('Navigation ready')}catch(e){console.error('Nav setup failed:',e)}}
async function test(){try{console.log('Running test...');sl('#testResults');us('testing','Running Tests...');var r=await a.runTests();var te=['#testResults','#apiTestResults','#testOutput'];te.forEach(s=>{try{if($w(s)){$w(s).text='SUCCESS: '+(r.message||'All tests passed!');$w(s).style.color='#4CAF50'}}catch(e){}});console.log('Test Results:',r);ss('Tests completed!');us('online','Tests Passed');return r}catch(e){console.error('Test failed:',e);var te=['#testResults','#apiTestResults','#testOutput'];te.forEach(s=>{try{if($w(s)){$w(s).text='FAILED: '+e.message;$w(s).style.color='#F44336'}}catch(e){}});se('Test failed: '+e.message);us('error','Tests Failed');return{status:'error',message:e.message}}finally{hl('#testResults')}}
async function lc(){if(!c.FEATURES.CLUBS)return;try{console.log('Loading clubs...');sl('#clubsContainer');var r=await a.getClubs();if(r.status==='success'&&r.data?.clubs){dc(r.data.clubs);uc(r.data.clubs.length);console.log('Loaded '+r.data.clubs.length+' clubs')}else{throw new Error('Invalid clubs data')}}catch(e){console.error('Load clubs failed:',e);se('Error loading clubs: '+e.message)}finally{hl('#clubsContainer')}}
async function lt(){if(!c.FEATURES.TRAILS)return;try{console.log('Loading trails...');sl('#trailsContainer');var r=await a.getTrails();if(r.status==='success'&&r.data?.trails){dt(r.data.trails);ut(r.data.trails.length);console.log('Loaded '+r.data.trails.length+' trails')}else{throw new Error('Invalid trails data')}}catch(e){console.error('Load trails failed:',e);se('Error loading trails: '+e.message)}finally{hl('#trailsContainer')}}
async function ld(){if(!c.FEATURES.DASHBOARD)return;try{console.log('Loading dashboard...');sl('#dashboardContainer');var tr=await a.runTests();if($w('#dashboardRepeater'))dd(tr);console.log('Dashboard loaded')}catch(e){console.error('Load dashboard failed:',e);se('Dashboard error: '+e.message)}finally{hl('#dashboardContainer')}}
function dc(clubs){try{if(!$w('#clubsRepeater')){console.warn('Clubs repeater not found');return}var cd=clubs.map((cl,i)=>({_id:cl.id||`club-${i}`,clubName:cl.name||'Unknown Club',clubCategory:cl.category||'General Fitness',equipmentType:cl.equipment_type||'Mixed',description:cl.description||'Premium fitness club',location:cl.location||'Location TBD',memberCount:cl.member_count||0}));$w('#clubsRepeater').data=cd;$w('#clubsRepeater').onItemReady(($i,id)=>{try{var tm={'#clubNameText':id.clubName,'#clubCategoryText':id.clubCategory,'#equipmentTypeText':`Equipment: ${id.equipmentType}`,'#clubLocationText':id.location,'#clubDescriptionText':id.description,'#memberCountText':`${id.memberCount} members`};Object.entries(tm).forEach(([s,t])=>{try{if($i(s))$i(s).text=t}catch(e){}});var ce=['#clubContainer','#clubCard','#clubItem'];ce.forEach(s=>{try{if($i(s)){$i(s).onClick(()=>scd(id));$i(s).style.cursor='pointer'}}catch(e){}})}catch(e){console.warn('Club item setup failed:',e)}});console.log('Displayed '+clubs.length+' clubs')}catch(e){console.error('Display clubs failed:',e)}}
function dt(trails){try{if(!$w('#trailsRepeater')){console.warn('Trails repeater not found');return}var td=trails.map((tr,i)=>({_id:tr.id||`trail-${i}`,trailName:tr.name||'Unknown Trail',location:tr.location||'Unknown Location',difficulty:tr.difficulty||'Moderate',distance:tr.distance_km?`${tr.distance_km}km`:'Distance TBD',description:tr.description||'Virtual trail experience',estimatedTime:tr.estimated_time||'30-60 min',elevation:tr.elevation_gain||'Moderate'}));$w('#trailsRepeater').data=td;$w('#trailsRepeater').onItemReady(($i,id)=>{try{var tm={'#trailNameText':id.trailName,'#locationText':id.location,'#difficultyText':`Difficulty: ${id.difficulty}`,'#distanceText':id.distance,'#trailDescriptionText':id.description,'#estimatedTimeText':`Est. Time: ${id.estimatedTime}`,'#elevationText':`Elevation: ${id.elevation}`};Object.entries(tm).forEach(([s,t])=>{try{if($i(s))$i(s).text=t}catch(e){}});try{if($i('#difficultyBadge')){var dc=`ff-diff-${id.difficulty.toLowerCase()}`;$i('#difficultyBadge').addClass(dc);$i('#difficultyBadge').text=id.difficulty}}catch(e){}var ce=['#trailContainer','#trailCard','#trailItem'];ce.forEach(s=>{try{if($i(s)){$i(s).onClick(()=>std(id));$i(s).style.cursor='pointer'}}catch(e){}})}catch(e){console.warn('Trail item setup failed:',e)}});console.log('Displayed '+trails.length+' trails')}catch(e){console.error('Display trails failed:',e)}}
function dd(tr){try{if(!$w('#dashboardRepeater')){console.warn('Dashboard repeater not found');return}var di=tr.results.map((t,i)=>({_id:`test-${i}`,testName:t.name,status:t.status,message:t.message,responseTime:t.responseTime||'N/A',dataCount:t.dataCount||0,timestamp:new Date().toLocaleTimeString()}));$w('#dashboardRepeater').data=di;$w('#dashboardRepeater').onItemReady(($i,id)=>{try{var tm={'#testNameText':id.testName,'#messageText':id.message,'#responseTimeText':`${id.responseTime}ms`,'#dataCountText':`${id.dataCount} items`,'#timestampText':id.timestamp};Object.entries(tm).forEach(([s,t])=>{try{if($i(s))$i(s).text=t}catch(e){}});try{if($i('#statusText')){$i('#statusText').text=id.status.toUpperCase();var sc={'success':'#4CAF50','error':'#F44336','warning':'#FF9800','info':'#2196F3'};var col=sc[id.status]||'#757575';$i('#statusText').style.color=col}}catch(e){}}catch(e){console.warn('Dashboard item setup failed:',e)}});console.log('Dashboard loaded with '+di.length+' items')}catch(e){console.error('Display dashboard failed:',e)}}
function lpd(){try{var cp=wixLocation.path||'/';console.log('Loading data for page: '+cp);switch(cp){case'/clubs':lc();break;case'/trails':lt();break;case'/dashboard':ld();break;case'/':case'':lhs();break;default:console.log('No specific loader');break}}catch(e){console.error('Load page data failed:',e)}}
async function lhs(){try{console.log('Loading homepage stats...');var tr=await a.runTests();if(tr.status==='success'){var ct=tr.results.find(t=>t.name.toLowerCase().includes('club'));var tt=tr.results.find(t=>t.name.toLowerCase().includes('trail'));var su={'#clubCountText':ct?ct.dataCount+' Premium Clubs':'6 Premium Clubs','#trailCountText':tt?tt.dataCount+' Virtual Trails':'8 Virtual Trails','#platformStatusText':'All Systems Operational','#totalMembersText':'1,250+ Members','#activeSessionsText':'45 Active Sessions'};Object.entries(su).forEach(([s,t])=>{try{if($w(s))$w(s).text=t}catch(e){}});console.log('Homepage stats updated')}}catch(e){console.error('Homepage stats failed:',e)}}
function keys(){document.addEventListener('keydown',function(e){try{if(e.key==='Escape'){['#clubDetailsLightbox','#trailDetailsLightbox'].forEach(s=>{try{if($w(s))$w(s).hide()}catch(er){}})}if((e.ctrlKey||e.metaKey)&&e.key==='t'&&c.DEBUG){e.preventDefault();window.testFitFriendsAPI()}if((e.ctrlKey||e.metaKey)&&e.key==='d'&&c.DEBUG){e.preventDefault();console.log('Debug:',{config:c,api:a,page:wixLocation.path,timestamp:new Date().toISOString()})}}catch(er){}})}
function initW(){if(typeof $w==='undefined'){console.warn('Wix $w not available, retrying...');setTimeout(initW,2000);return}$w.onReady(async function(){try{console.log('Wix page ready!');var initialized=await init();if(initialized){nav();keys();if(c.AUTO_LOAD)setTimeout(lpd,1000);if(c.DEBUG){window.FitFriendsClubs={api:a,config:c,functions:{loadClubs:lc,loadTrails:lt,loadDashboard:ld,test:test,showClubDetails:scd,showTrailDetails:std},utils:{showLoading:sl,hideLoading:hl,showError:se,showSuccess:ss,updateStatus:us}};console.log('Debug interface: window.FitFriendsClubs')}console.log('FitFriendsClubs ready!')}}catch(e){console.error('Init error:',e);us('error','Init Failed');se('Init failed: '+e.message)}})}
window.addEventListener('error',function(e){if(e.error&&e.error.message&&e.error.message.includes('FitFriends')){console.error('Global Error:',e.error);if(c&&c.DEBUG)se('Error: '+e.error.message)}});
window.showLoading=sl;window.hideLoading=hl;window.showError=se;window.showSuccess=ss;window.updateStatus=us;window.updateClubCount=uc;window.updateTrailCount=ut;window.showClubDetails=scd;window.showTrailDetails=std;window.testFitFriendsAPI=async function(){console.log('Manual test...');return await test()};
initW();console.log('FitFriendsClubs Loaded!');})();
</script>
<div id="loadingIcon" style="display:none;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:9999"><div class="ff-load"></div></div>
<div id="errorMessage" style="display:none;position:fixed;top:20px;right:20px;z-index:9998;max-width:350px"></div>
<div id="successMessage" style="display:none;position:fixed;top:60px;right:20px;z-index:9998;max-width:350px"></div>